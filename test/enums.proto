// Copyright Â© 2021 The Things Industries B.V.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

import "annotations.proto";
import "internal/gogoproto/gogo.proto";

package thethings.flags.test;

option go_package = "github.com/TheThingsIndustries/protoc-gen-go-flags/test";

option (gogoproto.enum_stringer_all) = true;
option (gogoproto.goproto_enum_stringer_all) = false;

enum RegularEnum {
  option (gogoproto.goproto_enum_prefix) = false;
  option (gogoproto.enum_stringer) = false;

  REGULAR_UNKNOWN = 0;

  REGULAR_A = 1;
  REGULAR_B = 2;
}

enum CustomEnum {
  CUSTOM_UNKNOWN = 0;
  CUSTOM_V1_0    = 1;
  CUSTOM_V1_0_1  = 2;
}

message CustomEnumValue {
  option (thethings.flags.message) = { select: true, set: true, wrapper: true };

  CustomEnum value = 1;
}

message MessageWithEnums {
  option (thethings.flags.message) = { select: true, set: true };

  RegularEnum regular = 1;
  repeated RegularEnum regulars = 2;

  CustomEnum custom = 3;
  repeated CustomEnum customs = 4;

  CustomEnumValue wrapped_custom = 5;
  repeated CustomEnumValue wrapped_customs = 6;
}

message MessageWithOneofEnums {
  option (thethings.flags.message) = { select: true, set: true };

  oneof value {
    RegularEnum regular = 1;
    CustomEnum custom = 2;
    CustomEnumValue wrapped_custom = 3;
  }
}

message MessageWithEmbeddedMessageDefinitionWithEnums {
  option (thethings.flags.message) = { select: true, set: true };

  message EmbeddedMessageDefinitionWithEnum {
    option (thethings.flags.message) = { select: true, set: true };

    string string_value = 1;
    enum EmbeddedEnum {
      option (gogoproto.goproto_enum_prefix) = false;
      option (gogoproto.enum_stringer) = false;

      AT_MOST_ONCE = 0;
      AT_LEAST_ONCE = 1;
      EXACTLY_ONCE = 2;
    }

    EmbeddedEnum test_enum_value = 2;
    EmbeddedEnum test_another_enum_value = 3;
  }
  
  EmbeddedMessageDefinitionWithEnum test_message_field = 1;
}
