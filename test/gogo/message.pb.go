// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: message.proto

package test

import (
	fmt "fmt"
	_ "github.com/TheThingsIndustries/protoc-gen-go-flags/annotations"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SemanticalMessage struct {
	Empty                *SemanticalMessage_Empty    `protobuf:"bytes,1,opt,name=empty,proto3" json:"empty,omitempty"`
	EmptyOverruled       *SemanticalMessage_Empty    `protobuf:"bytes,2,opt,name=empty_overruled,json=emptyOverruled,proto3" json:"empty_overruled,omitempty"`
	NonEmpty             *SemanticalMessage_NonEmpty `protobuf:"bytes,3,opt,name=non_empty,json=nonEmpty,proto3" json:"non_empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SemanticalMessage) Reset()         { *m = SemanticalMessage{} }
func (m *SemanticalMessage) String() string { return proto.CompactTextString(m) }
func (*SemanticalMessage) ProtoMessage()    {}
func (*SemanticalMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}
func (m *SemanticalMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemanticalMessage.Unmarshal(m, b)
}
func (m *SemanticalMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemanticalMessage.Marshal(b, m, deterministic)
}
func (m *SemanticalMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemanticalMessage.Merge(m, src)
}
func (m *SemanticalMessage) XXX_Size() int {
	return xxx_messageInfo_SemanticalMessage.Size(m)
}
func (m *SemanticalMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SemanticalMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SemanticalMessage proto.InternalMessageInfo

func (m *SemanticalMessage) GetEmpty() *SemanticalMessage_Empty {
	if m != nil {
		return m.Empty
	}
	return nil
}

func (m *SemanticalMessage) GetEmptyOverruled() *SemanticalMessage_Empty {
	if m != nil {
		return m.EmptyOverruled
	}
	return nil
}

func (m *SemanticalMessage) GetNonEmpty() *SemanticalMessage_NonEmpty {
	if m != nil {
		return m.NonEmpty
	}
	return nil
}

type SemanticalMessage_Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SemanticalMessage_Empty) Reset()         { *m = SemanticalMessage_Empty{} }
func (m *SemanticalMessage_Empty) String() string { return proto.CompactTextString(m) }
func (*SemanticalMessage_Empty) ProtoMessage()    {}
func (*SemanticalMessage_Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0, 0}
}
func (m *SemanticalMessage_Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemanticalMessage_Empty.Unmarshal(m, b)
}
func (m *SemanticalMessage_Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemanticalMessage_Empty.Marshal(b, m, deterministic)
}
func (m *SemanticalMessage_Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemanticalMessage_Empty.Merge(m, src)
}
func (m *SemanticalMessage_Empty) XXX_Size() int {
	return xxx_messageInfo_SemanticalMessage_Empty.Size(m)
}
func (m *SemanticalMessage_Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_SemanticalMessage_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_SemanticalMessage_Empty proto.InternalMessageInfo

type SemanticalMessage_NonEmpty struct {
	BoolValue            bool     `protobuf:"varint,1,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SemanticalMessage_NonEmpty) Reset()         { *m = SemanticalMessage_NonEmpty{} }
func (m *SemanticalMessage_NonEmpty) String() string { return proto.CompactTextString(m) }
func (*SemanticalMessage_NonEmpty) ProtoMessage()    {}
func (*SemanticalMessage_NonEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0, 1}
}
func (m *SemanticalMessage_NonEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemanticalMessage_NonEmpty.Unmarshal(m, b)
}
func (m *SemanticalMessage_NonEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemanticalMessage_NonEmpty.Marshal(b, m, deterministic)
}
func (m *SemanticalMessage_NonEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemanticalMessage_NonEmpty.Merge(m, src)
}
func (m *SemanticalMessage_NonEmpty) XXX_Size() int {
	return xxx_messageInfo_SemanticalMessage_NonEmpty.Size(m)
}
func (m *SemanticalMessage_NonEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_SemanticalMessage_NonEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_SemanticalMessage_NonEmpty proto.InternalMessageInfo

func (m *SemanticalMessage_NonEmpty) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

type SemanticalOneOfMessage struct {
	// Types that are valid to be assigned to Option:
	//
	//	*SemanticalOneOfMessage_Semantical
	//	*SemanticalOneOfMessage_Alternative
	Option               isSemanticalOneOfMessage_Option `protobuf_oneof:"option"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SemanticalOneOfMessage) Reset()         { *m = SemanticalOneOfMessage{} }
func (m *SemanticalOneOfMessage) String() string { return proto.CompactTextString(m) }
func (*SemanticalOneOfMessage) ProtoMessage()    {}
func (*SemanticalOneOfMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}
func (m *SemanticalOneOfMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemanticalOneOfMessage.Unmarshal(m, b)
}
func (m *SemanticalOneOfMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemanticalOneOfMessage.Marshal(b, m, deterministic)
}
func (m *SemanticalOneOfMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemanticalOneOfMessage.Merge(m, src)
}
func (m *SemanticalOneOfMessage) XXX_Size() int {
	return xxx_messageInfo_SemanticalOneOfMessage.Size(m)
}
func (m *SemanticalOneOfMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SemanticalOneOfMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SemanticalOneOfMessage proto.InternalMessageInfo

type isSemanticalOneOfMessage_Option interface {
	isSemanticalOneOfMessage_Option()
}

type SemanticalOneOfMessage_Semantical struct {
	Semantical *SemanticalOneOfMessage_Empty `protobuf:"bytes,1,opt,name=semantical,proto3,oneof" json:"semantical,omitempty"`
}
type SemanticalOneOfMessage_Alternative struct {
	Alternative *SemanticalOneOfMessage_NonEmpty `protobuf:"bytes,2,opt,name=alternative,proto3,oneof" json:"alternative,omitempty"`
}

func (*SemanticalOneOfMessage_Semantical) isSemanticalOneOfMessage_Option()  {}
func (*SemanticalOneOfMessage_Alternative) isSemanticalOneOfMessage_Option() {}

func (m *SemanticalOneOfMessage) GetOption() isSemanticalOneOfMessage_Option {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *SemanticalOneOfMessage) GetSemantical() *SemanticalOneOfMessage_Empty {
	if x, ok := m.GetOption().(*SemanticalOneOfMessage_Semantical); ok {
		return x.Semantical
	}
	return nil
}

func (m *SemanticalOneOfMessage) GetAlternative() *SemanticalOneOfMessage_NonEmpty {
	if x, ok := m.GetOption().(*SemanticalOneOfMessage_Alternative); ok {
		return x.Alternative
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SemanticalOneOfMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SemanticalOneOfMessage_Semantical)(nil),
		(*SemanticalOneOfMessage_Alternative)(nil),
	}
}

type SemanticalOneOfMessage_Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SemanticalOneOfMessage_Empty) Reset()         { *m = SemanticalOneOfMessage_Empty{} }
func (m *SemanticalOneOfMessage_Empty) String() string { return proto.CompactTextString(m) }
func (*SemanticalOneOfMessage_Empty) ProtoMessage()    {}
func (*SemanticalOneOfMessage_Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1, 0}
}
func (m *SemanticalOneOfMessage_Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemanticalOneOfMessage_Empty.Unmarshal(m, b)
}
func (m *SemanticalOneOfMessage_Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemanticalOneOfMessage_Empty.Marshal(b, m, deterministic)
}
func (m *SemanticalOneOfMessage_Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemanticalOneOfMessage_Empty.Merge(m, src)
}
func (m *SemanticalOneOfMessage_Empty) XXX_Size() int {
	return xxx_messageInfo_SemanticalOneOfMessage_Empty.Size(m)
}
func (m *SemanticalOneOfMessage_Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_SemanticalOneOfMessage_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_SemanticalOneOfMessage_Empty proto.InternalMessageInfo

type SemanticalOneOfMessage_NonEmpty struct {
	BoolValue            bool     `protobuf:"varint,1,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SemanticalOneOfMessage_NonEmpty) Reset()         { *m = SemanticalOneOfMessage_NonEmpty{} }
func (m *SemanticalOneOfMessage_NonEmpty) String() string { return proto.CompactTextString(m) }
func (*SemanticalOneOfMessage_NonEmpty) ProtoMessage()    {}
func (*SemanticalOneOfMessage_NonEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1, 1}
}
func (m *SemanticalOneOfMessage_NonEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemanticalOneOfMessage_NonEmpty.Unmarshal(m, b)
}
func (m *SemanticalOneOfMessage_NonEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemanticalOneOfMessage_NonEmpty.Marshal(b, m, deterministic)
}
func (m *SemanticalOneOfMessage_NonEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemanticalOneOfMessage_NonEmpty.Merge(m, src)
}
func (m *SemanticalOneOfMessage_NonEmpty) XXX_Size() int {
	return xxx_messageInfo_SemanticalOneOfMessage_NonEmpty.Size(m)
}
func (m *SemanticalOneOfMessage_NonEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_SemanticalOneOfMessage_NonEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_SemanticalOneOfMessage_NonEmpty proto.InternalMessageInfo

func (m *SemanticalOneOfMessage_NonEmpty) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

func init() {
	proto.RegisterType((*SemanticalMessage)(nil), "thethings.flags.test.SemanticalMessage")
	proto.RegisterType((*SemanticalMessage_Empty)(nil), "thethings.flags.test.SemanticalMessage.Empty")
	proto.RegisterType((*SemanticalMessage_NonEmpty)(nil), "thethings.flags.test.SemanticalMessage.NonEmpty")
	proto.RegisterType((*SemanticalOneOfMessage)(nil), "thethings.flags.test.SemanticalOneOfMessage")
	proto.RegisterType((*SemanticalOneOfMessage_Empty)(nil), "thethings.flags.test.SemanticalOneOfMessage.Empty")
	proto.RegisterType((*SemanticalOneOfMessage_NonEmpty)(nil), "thethings.flags.test.SemanticalOneOfMessage.NonEmpty")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xcf, 0x6a, 0xc2, 0x40,
	0x10, 0xc6, 0x93, 0xb4, 0xa6, 0x71, 0xa5, 0x7f, 0x0c, 0xa5, 0x68, 0x40, 0x10, 0x4f, 0xbd, 0x24,
	0x11, 0xa5, 0x94, 0x7a, 0xb4, 0x14, 0xec, 0xc1, 0x0a, 0xa9, 0x14, 0xda, 0x43, 0x65, 0xd5, 0x71,
	0x13, 0x48, 0x76, 0x25, 0xbb, 0x11, 0xfa, 0x30, 0x7d, 0x01, 0x5f, 0xa9, 0x6f, 0xe1, 0x13, 0x94,
	0x6c, 0x92, 0x2a, 0xb4, 0xd0, 0x7f, 0xb7, 0x8f, 0x99, 0x9d, 0xdf, 0x7c, 0xf9, 0x32, 0xe8, 0x30,
	0x02, 0xce, 0x31, 0x01, 0x67, 0x19, 0x33, 0xc1, 0xcc, 0x53, 0xe1, 0x83, 0xf0, 0x03, 0x4a, 0xb8,
	0xb3, 0x08, 0x31, 0xe1, 0x8e, 0x00, 0x2e, 0xac, 0x2a, 0xa6, 0x94, 0x09, 0x2c, 0x02, 0x46, 0x79,
	0xf6, 0xd0, 0x6a, 0x04, 0x54, 0x40, 0x4c, 0x71, 0xe8, 0x12, 0x46, 0x98, 0xac, 0x49, 0x95, 0xb5,
	0x5b, 0x6f, 0x1a, 0xaa, 0xde, 0x43, 0x84, 0xa9, 0x08, 0x66, 0x38, 0x1c, 0x66, 0x3b, 0xcc, 0x6b,
	0x54, 0x82, 0x68, 0x29, 0x5e, 0x6a, 0x6a, 0x53, 0x3d, 0xaf, 0x74, 0x6c, 0xe7, 0xab, 0x6d, 0xce,
	0xa7, 0x39, 0xe7, 0x26, 0x1d, 0xf2, 0xb2, 0x59, 0xf3, 0x19, 0x1d, 0x4b, 0x31, 0x61, 0x2b, 0x88,
	0xe3, 0x24, 0x84, 0x79, 0x4d, 0xfb, 0x03, 0xae, 0xaf, 0x6f, 0xd6, 0x75, 0xad, 0xad, 0x78, 0x47,
	0x92, 0x36, 0x2a, 0x60, 0xe6, 0x10, 0x95, 0x29, 0xa3, 0x93, 0xcc, 0xe8, 0x9e, 0x24, 0xb7, 0x7f,
	0x4a, 0xbe, 0x63, 0x34, 0xf3, 0x6a, 0xd0, 0x5c, 0x59, 0x55, 0x54, 0x92, 0xa2, 0x67, 0x6c, 0xd6,
	0xf5, 0x7d, 0x43, 0x39, 0x51, 0xad, 0x2e, 0x32, 0x8a, 0x87, 0x66, 0x03, 0xa1, 0x29, 0x63, 0xe1,
	0x64, 0x85, 0xc3, 0x04, 0x64, 0x2e, 0x86, 0x57, 0x4e, 0x2b, 0x0f, 0x69, 0x61, 0x3b, 0xd4, 0x43,
	0x9b, 0x75, 0x5d, 0x4f, 0x55, 0x53, 0x6d, 0xbd, 0x6a, 0xe8, 0x6c, 0xbb, 0x7c, 0x44, 0x61, 0xb4,
	0x28, 0x22, 0x1e, 0x23, 0xc4, 0x3f, 0x3a, 0x79, 0xce, 0x9d, 0xef, 0xec, 0xef, 0x12, 0xb2, 0x74,
	0x06, 0x8a, 0xb7, 0xc3, 0x31, 0x1f, 0x51, 0x05, 0x87, 0xf2, 0x7f, 0x8b, 0x60, 0x05, 0x79, 0xde,
	0x17, 0xbf, 0xc2, 0x16, 0x5f, 0x3c, 0x50, 0xbc, 0x5d, 0x96, 0x75, 0x90, 0xe7, 0xf3, 0xef, 0x54,
	0xfa, 0x06, 0xd2, 0xd9, 0x32, 0xbd, 0xd1, 0xfe, 0xd5, 0xd3, 0x25, 0x09, 0x84, 0x9f, 0x4c, 0x9d,
	0x19, 0x8b, 0xdc, 0xb1, 0x0f, 0x63, 0xe9, 0xf2, 0x96, 0xce, 0x13, 0x2e, 0xe2, 0x00, 0xb8, 0x2b,
	0xaf, 0x74, 0x66, 0x13, 0xa0, 0x36, 0x61, 0xb6, 0x74, 0xef, 0xa6, 0xee, 0xa7, 0xba, 0xec, 0x74,
	0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x10, 0xb5, 0x90, 0x79, 0x18, 0x03, 0x00, 0x00,
}
